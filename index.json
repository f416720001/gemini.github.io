[{"content":" 來源:https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n在 JavaScript 中，可以通過使用 window.innerHeight 來取得目前顯示畫面的值。該值會包含瀏覽器的界面，並會隨著介面變化去做更新。所以此次的訣竅，是將 window.innerHeight 值存在 CSS 變數中，並將該值用來取代 vh 的基本單位。\nCSS 1 2 3 4 #map { height: calc(100vh - 84px); height: calc((var(--vh, 1vh) * 100) - 84px); } JavaScript 1 2 3 let vh = window.innerHeight * 0.01; // Then we set the value in the --vh custom property to the root of the document document.documentElement.style.setProperty(\u0026#34;--vh\u0026#34;, `${vh}px`); ","permalink":"https://f416720001.github.io/posts/%E6%89%8B%E6%A9%9F%E7%B6%B2%E9%A0%81100vh-v.s.-%E7%B6%B2%E5%9D%80%E5%88%97/","summary":" 來源:https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n在 JavaScript 中，可以通過使用 window.innerHeight 來取得目前顯示畫面的值。該值會包含瀏覽器的界面，並會隨著介面變化去做更新。所以此次的訣竅，是將 window.innerHeight 值存在 CSS 變數中，並將該值用來取代 vh 的基本單位。\nCSS 1 2 3 4 #map { height: calc(100vh - 84px); height: calc((var(--vh, 1vh) * 100) - 84px); } JavaScript 1 2 3 let vh = window.innerHeight * 0.01; // Then we set the value in the --vh custom property to the root of the document document.documentElement.style.setProperty(\u0026#34;--vh\u0026#34;, `${vh}px`); ","title":"手機網頁100vh v.s. 網址列"},{"content":"Mode Client mode Cluster mode 差異點 driver 放置的位置\ndriver放置於 Client Master Cluster Slave(Worker)其中一台 影響層面 Memory 設定 啟動Job時，是否要指定memory的使用量\nMemory設定 Client 都可 Cluster 指定比較優，因為driver預設2GB 機器壞掉時影響層面 EC2壞掉影響層面 worker記憶體量 Client 千萬不能壞Master，需要額外的重啟流程 優 Cluster 壞帶有driver的worker時，master會協助重啟 少 小結論 Client 適合中小型\n適合情境 Client Master/Slave 在同一網路內 Cluster Master/Slave 在不同網路內 ","permalink":"https://f416720001.github.io/posts/aws-emr-%E6%A8%A1%E5%BC%8F%E5%B7%AE%E7%95%B0/","summary":"Mode Client mode Cluster mode 差異點 driver 放置的位置\ndriver放置於 Client Master Cluster Slave(Worker)其中一台 影響層面 Memory 設定 啟動Job時，是否要指定memory的使用量\nMemory設定 Client 都可 Cluster 指定比較優，因為driver預設2GB 機器壞掉時影響層面 EC2壞掉影響層面 worker記憶體量 Client 千萬不能壞Master，需要額外的重啟流程 優 Cluster 壞帶有driver的worker時，master會協助重啟 少 小結論 Client 適合中小型\n適合情境 Client Master/Slave 在同一網路內 Cluster Master/Slave 在不同網路內 ","title":"AWS EMR 模式差異"},{"content":"Docker Timezone 時區問題 方法一： 將本機的時間帶到 image 當中 when docker run some-image\n1 -v /etc/localtime:/etc/localtime:ro docker-compsoe.yml\n1 2 3 4 5 services: some-container: volumes: - /etc/timezone:/etc/timezone:ro - /etc/localtime:/etc/localtime:ro 方法二(推薦)： 設定環境變數 when docker run some-image\n1 -e \u0026#34;TZ=Asia/Taipei\u0026#34; docker-compose.yml\n1 2 3 4 sevices: some-container: environment: TZ: Asia/Taipei 例外 如果使用到 alpine 版本\n則需要自行重新 build image\nDockerfile 先添加以下兩行，再進行上述操作\n1 2 RUN apk update \u0026amp;\u0026amp; \\ apk add -U tzdata ","permalink":"https://f416720001.github.io/posts/docker-timezone-%E6%99%82%E5%8D%80%E5%95%8F%E9%A1%8C/","summary":"Docker Timezone 時區問題 方法一： 將本機的時間帶到 image 當中 when docker run some-image\n1 -v /etc/localtime:/etc/localtime:ro docker-compsoe.yml\n1 2 3 4 5 services: some-container: volumes: - /etc/timezone:/etc/timezone:ro - /etc/localtime:/etc/localtime:ro 方法二(推薦)： 設定環境變數 when docker run some-image\n1 -e \u0026#34;TZ=Asia/Taipei\u0026#34; docker-compose.yml\n1 2 3 4 sevices: some-container: environment: TZ: Asia/Taipei 例外 如果使用到 alpine 版本\n則需要自行重新 build image\nDockerfile 先添加以下兩行，再進行上述操作\n1 2 RUN apk update \u0026amp;\u0026amp; \\ apk add -U tzdata ","title":"Docker timezone 時區問題"},{"content":"題目: 讓以下 function 回傳 True 原文: https://www.reddit.com/r/Python/comments/cje5yh/short_python_challenge_make_this_return_true/\n1 2 3 4 5 6 def check(x): if x+1 is 1+x: return False if x+2 is not 2+x: return False return True 解答一: -7 在 Python 中，整数 -5 到 256 會預先分配到記憶體，\n此時 -7 + 1 得到的 -6，恰好在這範圍之外，\n才會出現 -6 is not -6 的情況\n解答二: 自定義 class 透過實現 add，讓他可以與 integer 互動， 但其實就是拿來判斷 integer 後，回傳適當的 boolean (有點作弊 XDD)\n1 2 3 4 5 6 class Test(int): def __add__(self, v): if v == 1: return 0 else: return v ","permalink":"https://f416720001.github.io/posts/python-%E8%85%A6%E7%AD%8B%E6%80%A5%E8%BD%89%E5%BD%8E/","summary":"題目: 讓以下 function 回傳 True 原文: https://www.reddit.com/r/Python/comments/cje5yh/short_python_challenge_make_this_return_true/\n1 2 3 4 5 6 def check(x): if x+1 is 1+x: return False if x+2 is not 2+x: return False return True 解答一: -7 在 Python 中，整数 -5 到 256 會預先分配到記憶體，\n此時 -7 + 1 得到的 -6，恰好在這範圍之外，\n才會出現 -6 is not -6 的情況\n解答二: 自定義 class 透過實現 add，讓他可以與 integer 互動， 但其實就是拿來判斷 integer 後，回傳適當的 boolean (有點作弊 XDD)\n1 2 3 4 5 6 class Test(int): def __add__(self, v): if v == 1: return 0 else: return v ","title":"Python 腦筋急轉彎"},{"content":" Docker-compose.yml 無密碼，無SSL\n1 2 3 4 5 6 7 8 9 10 11 12 version: \u0026#39;3\u0026#39; services: registry: image: registry:2.8.1 ports: - \u0026#34;21010:5000\u0026#34; environment: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data volumes: - ./auth:/auth - ./data:/data Chagne your images name 1 docker tag alpine localhost:21010/my-alpine Push it 1 docker push localhost:21010/my-alpine after all, 4. Pull your image from private registry\n1 docker pull localhost:21010/my-alpine Ref. https://gabrieltanner.org/blog/docker-registry/\n","permalink":"https://f416720001.github.io/posts/docker-private-registry%E6%90%AD%E5%BB%BA/","summary":"Docker-compose.yml 無密碼，無SSL\n1 2 3 4 5 6 7 8 9 10 11 12 version: \u0026#39;3\u0026#39; services: registry: image: registry:2.8.1 ports: - \u0026#34;21010:5000\u0026#34; environment: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data volumes: - ./auth:/auth - ./data:/data Chagne your images name 1 docker tag alpine localhost:21010/my-alpine Push it 1 docker push localhost:21010/my-alpine after all, 4. Pull your image from private registry\n1 docker pull localhost:21010/my-alpine Ref. https://gabrieltanner.org/blog/docker-registry/","title":"Docker private registry搭建"},{"content":" 前言: 2020 年碩士期間搭建了 Hexo 來記錄所學，當時對於 npm 家族比較習慣，近期開始接觸 golang，順勢也把荒廢的 blog 搬移過來，希望接下來能夠整理一些近期 kafka、AWS EMR、BigQuery 所學的知識\u0026hellip;\nHugo 安裝最新版本 如果你也像我一樣，apt install hugo 都卡在 0.68.0 左右的版本的話，可以參考 這邊是使用 ubuntu 20.04，要記得挑符合自己 cpu 版本的\n1. 移除 apt 所安裝的 hugo 1 2 3 sudo apt update sudo apt install curl wget sudo apt remove hugo 2. 下載最新 hugo.deb 1 2 3 4 5 6 curl -s https://api.github.com/repos/gohugoio/hugo/releases/latest \\ | grep browser_download_url \\ | grep Linux-64bit.deb \\ | grep -v extended \\ | cut -d \u0026#39;\u0026#34;\u0026#39; -f 4 \\ | wget -i - 3. 安裝他，改成你下載的 filename 1 sudo dpkg -i hugo*_Linux-64bit.deb 4. 完工 1 hugo version ","permalink":"https://f416720001.github.io/posts/hugo-%E6%9C%80%E6%96%B0%E7%89%88%E6%90%AD%E5%BB%BA/","summary":"前言: 2020 年碩士期間搭建了 Hexo 來記錄所學，當時對於 npm 家族比較習慣，近期開始接觸 golang，順勢也把荒廢的 blog 搬移過來，希望接下來能夠整理一些近期 kafka、AWS EMR、BigQuery 所學的知識\u0026hellip;\nHugo 安裝最新版本 如果你也像我一樣，apt install hugo 都卡在 0.68.0 左右的版本的話，可以參考 這邊是使用 ubuntu 20.04，要記得挑符合自己 cpu 版本的\n1. 移除 apt 所安裝的 hugo 1 2 3 sudo apt update sudo apt install curl wget sudo apt remove hugo 2. 下載最新 hugo.deb 1 2 3 4 5 6 curl -s https://api.github.com/repos/gohugoio/hugo/releases/latest \\ | grep browser_download_url \\ | grep Linux-64bit.deb \\ | grep -v extended \\ | cut -d \u0026#39;\u0026#34;\u0026#39; -f 4 \\ | wget -i - 3.","title":"Hugo 最新版搭建"},{"content":"跌跌撞撞 Skill Python、C++、Golang、Vue.js\n","permalink":"https://f416720001.github.io/about/","summary":"跌跌撞撞 Skill Python、C++、Golang、Vue.js","title":"About"}]